/*
题目描述
津津的零花钱一直都是自己管理。每个月的月初妈妈给津津300元钱，津津会预算这个月的花销，并且总能做到实际花销和预算的相同。

为了让津津学习如何储蓄，妈妈提出，津津可以随时把整百的钱存在她那里，到了年末她会加上20％还给津津。因此津津制定了一个储蓄计划：每个月的月初，在得到妈妈给的零花钱后，如果她预计到这个月的月末手中还会有多于100元或恰好100元，她就会把整百的钱存在妈妈那里，剩余的钱留在自己手中。

例如11月初津津手中还有83元，妈妈给了津津300元。津津预计11月的花销是180元，那么她就会在妈妈那里存200元，自己留下183元。到了11月月末，津津手中会剩下3元钱。

津津发现这个储蓄计划的主要风险是，存在妈妈那里的钱在年末之前不能取出。有可能在某个月的月初，津津手中的钱加上这个月妈妈给的钱，不够这个月的原定预算。如果出现这种情况，津津将不得不在这个月省吃俭用，压缩预算。

现在请你根据2004年1月到12月每个月津津的预算，判断会不会出现这种情况。如果不会，计算到2004年年末，妈妈将津津平常存的钱加上20％还给津津之后，津津手中会有多少钱。

输入输出格式
输入格式：
输入文件save.in包括12行数据，每行包含一个小于350的非负整数，分别表示1月到12月津津的预算。

输出格式：
输出文件save.out包括一行，这一行只包含一个整数。如果储蓄计划实施过程中出现某个月钱不够用的情况，输出-X，X表示出现这种情况的第一个月；否则输出到2004年年末津津手中会有多少钱。

思路：
变量s存放手中剩余的钱数，m存放在妈妈手中存放的钱数，计算出按当月的预算能剩余多少钱，如果剩余钱数小于零，直接退出循环，输出月份，然后循环测试是否大于100，如果大于100，
就另m+=100，然后剩余钱数减100，直到剩余钱数小于100，最后另s=剩余钱数，然后开启新一轮。。。
注意：一开始我直接用%d输出的浮点数，一开始以为会直接输出那个浮点数的整数格式，例如如果是6.2直接输出6，结果输出的是0，所以我最后先把浮点数强转成整数又输出的。

*/
#include <stdio.h>

int main()
{
	int save[13];
	int s = 0, m = 0;
	for (int i = 1; i < 13; i++)
		scanf("%d", &save[i]);
	int i = 1;
	bool flag = true;
	for (; i < 13; i++)
	{
		int temp = s + 300 - save[i];
		if (temp < 0)
		{
			flag = false;
			break;
		}
		while (temp >= 100)
		{
			temp -= 100;
			m += 100;
		}
		s = temp;
	}
	if (flag)
		printf("%d\n", (int)(m * 1.2 + s));
	else
		printf("%d\n", -i);
	return 0;
}